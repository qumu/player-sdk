function o(){return o=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)({}).hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},o.apply(null,arguments)}function l(n){if(typeof n=="string")try{n=JSON.parse(n)}catch{return{}}return n}class d{constructor(){this.map=new Map}getCallbacks(e){return this.map.get(e)||[]}removeCallback(e,t){const i=this.map.get(e)||[];if(!i)return;if(!t)return void this.map.delete(e);const a=i.indexOf(t);a!==-1&&i.splice(a,1),i.length===0?this.map.delete(e):this.map.set(e,i)}shiftCallback(e){const t=this.getCallbacks(e);if(t.length===0)return;const i=t.shift();return this.removeCallback(e,i),i}storeCallback(e,t){const i=this.map.get(e)||[];i.push(t),this.map.set(e,i)}}class h{constructor(e){this.iframe=void 0,this.callbackStore=void 0,this.guid=void 0,this.messageHandler=void 0,this.originUrl=void 0,this.origin="*",this.readyPromise=void 0,this.version=3,this.iframe=e,this.originUrl=new URL(this.iframe.src).origin,this.guid=crypto.randomUUID(),this.callbackStore=new d,this.readyPromise=new Promise(t=>{this.messageHandler=i=>{if(i.origin!==this.originUrl)return;const a=l(i.data);if(a?.version===this.version&&(a?.action!=="handshake"||a?.guid===this.guid))if(a?.action!=="ready"){if(a?.action==="handshake")return this.origin=i.origin,void t();this.processData(a)}else{const u=a.value?window.document.querySelector(`iframe[src="${a.value}"]`):this.iframe;u?u===this.iframe&&(this.origin=i.origin,t()):console.error("[Qumu Cloud Player SDK]","A Qumu Cloud player is ready but it is impossible to find the corresponding iFrame, the SDK will not work correctly. Incorrect URL is:",a.value)}},window.addEventListener("message",this.messageHandler)}),this.postMessage({action:"handshake",guid:this.guid})}addEventListener(e,t){if(!e)throw new TypeError("You must pass an event name.");if(!t)throw new TypeError("You must pass a callback function.");if(typeof t!="function")throw new TypeError("The callback must be a function.");this.callbackStore.getCallbacks(`event:${e}`).length===0&&this.readyPromise.then(()=>{this.postMessage({action:"event",guid:this.guid,name:e,value:"add"})}),this.callbackStore.storeCallback(`event:${e}`,t)}destroy(){this.messageHandler&&window.removeEventListener("message",this.messageHandler),this.postMessage({action:"command",guid:this.guid,name:"destroy"})}disableCaptionTrack(){this.enableCaptionTrack(null)}enableCaptionTrack(e){this.set("captionTrack",e)}async getAudienceReactions(){return this.get("audienceReactions")}async getCaptionTracks(){return this.get("captionTracks")}async getChapters(){return this.get("chapters")}async getCurrentChapter(){return this.get("chapter")}async getCurrentCaptionTrack(){return this.get("captionTrack")}async getCurrentTime(){return this.get("currentTime")}async getDuration(){return this.get("duration")}async getLayout(){return this.get("layout")}async getLevel(){return this.get("level")}async getLevels(){return this.get("levels")}async getLiveEndTime(){return this.get("liveEndTime")}async getLiveStartTime(){return this.get("liveStartTime")}async getLiveState(){return this.get("liveState")}async getPictureInPicturePosition(){return this.get("pipPosition")}async getPlaybackLevel(){return this.get("playbackLevel")}async getPlaybackRate(){return this.get("playbackRate")}async getPlaybackRates(){return this.get("playbackRates")}async getPresentation(){return this.get("presentation")}async getPrimaryContent(){return this.get("primaryContent")}async getSideBySideRatio(){return this.get("sideBySideRatio")}async getVolume(){return this.get("volume")}async isPaused(){return this.get("paused")}pause(){this.command("pause")}play(){this.command("play")}sendAudienceReaction(e){this.set("audienceReaction",e)}removeEventListener(e,t){if(!e)throw new TypeError("You must pass an event name.");this.callbackStore.removeCallback(`event:${e}`,t),this.callbackStore.getCallbacks(`event:${e}`).length===0&&this.postMessage({action:"event",guid:this.guid,name:e,value:"remove"})}setCurrentTime(e){if(e<0)throw new Error("The current time must be superior or equal to 0");this.set("currentTime",e)}setLayout(e){this.set("layout",e)}setLevel(e){if(e<-1||e===0)throw new Error("The level must set to -1 for automatic switching or be superior to 0");this.set("level",e)}setPictureInPicturePosition(e){this.set("pipPosition",e)}setPlaybackRate(e){if(e<0)throw new Error("The playback rate must be superior or equal to 0");if(e>2)throw new Error("The playback rate must be inferior or equal to 2");this.set("playbackRate",e)}setPrimaryContent(e){this.set("primaryContent",e)}setSideBySideRatio(e){if(e<50||e>80)throw new Error("The ratio must be between 50 and 80");this.set("sideBySideRatio",e)}setVolume(e){if(e<0||e>100)throw new Error("The volume must be between 0 and 100");this.set("volume",e)}command(e,t){const i={action:"command",guid:this.guid,name:e};t&&(i.value=t),this.postMessage(i)}async get(e){return await this.readyPromise,new Promise((t,i)=>{try{this.callbackStore.storeCallback(`get:${e}`,{reject:i,resolve:t}),this.postMessage({action:"get",guid:this.guid,name:e})}catch(a){i(a)}})}postMessage(e){var t;const i=JSON.stringify(o({},e,{version:this.version}));(t=this.iframe.contentWindow)==null||t.postMessage(i,this.origin)}processData(e){const t=l(e);let i=[];if(t?.version===this.version&&t?.guid===this.guid){if(t.action==="event")i=this.callbackStore.getCallbacks(`${t.action}:${t.name}`);else if(t.action==="get"||t.action==="set"){const a=this.callbackStore.shiftCallback(`${t.action}:${t.name}`);a&&i.push(a)}i.forEach(a=>{typeof a=="function"?a(t.value):a.resolve(t.value)})}}set(e,t){if(t===void 0)throw new TypeError("A value must be set.");this.readyPromise.then(()=>{this.postMessage({action:"set",guid:this.guid,name:e,value:t})})}}const c=document.querySelector("iframe");let s,r={};c.addEventListener("load",()=>{s=g()});document.getElementById("url").addEventListener("input",n=>{s?.destroy(),r={},c.setAttribute("src",n.target.value)});function g(){const n=new h(c);return document.querySelectorAll('[data-type="event"]').forEach(e=>{const t=e.getAttribute("data-event");r[t]=i=>{console.log(t,i)},e.checked&&n.addEventListener(t,r[t])}),n}document.querySelectorAll('[data-type="get"]').forEach(n=>{n.addEventListener("click",()=>{const e=n.getAttribute("data-command");s[e]().then(t=>console.log(e,t))})});document.querySelectorAll('[data-type="set"]').forEach(n=>{n.addEventListener("click",()=>{const e=n.getAttribute("data-command"),t=JSON.parse(n.getAttribute("data-value")||"");s[e](t)})});document.querySelectorAll('[data-type="command"]').forEach(n=>{n.addEventListener("click",()=>{const e=n.getAttribute("data-command");s[e]()})});document.querySelectorAll('[data-type="event"]').forEach(n=>{const e=n.getAttribute("data-event");n.addEventListener("change",t=>{t.currentTarget.checked?s.addEventListener(e,r[e]):s.removeEventListener(e,r[e])})});
