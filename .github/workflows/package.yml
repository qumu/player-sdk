name: "Generate release & new package to NPM"

permissions:
  id-token: write  # Required for OIDC
  contents: read

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    name: Create new release
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Create Release
        uses: actions/github-script@v8
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const tag = process.env.GITHUB_REF.replace("refs/tags/", "");
            const prerelease = /-(alpha|beta|rc)\./.test(tag);
            
            await github.request(`POST /repos/${{ github.repository }}/releases`, {
              tag_name: tag,
              generate_release_notes: true,
              prerelease
            });

  publish-package:
    name: Release package to NPM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Use Node.js 24
        uses: actions/setup-node@v6
        with:
          node-version: 24
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@qumu'

      - name: Install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.FE_CI_BOT_TOKEN }}

      - name: Build package
        run: npm run build --workspace lib

      - name: Publish to NPM
        run: |
          VERSION_TAG="${GITHUB_REF#refs/tags/}"
          
          if [[ "$VERSION_TAG" == *"-alpha."* ]]; then
            TAG="alpha"
          elif [[ "$VERSION_TAG" == *"-beta."* ]]; then
            TAG="beta"
          elif [[ "$VERSION_TAG" == *"-rc."* ]]; then
            TAG="next"
          else
            TAG="latest"
          fi
          
          npm config set //registry.npmjs.org/:_authToken ${NODE_AUTH_TOKEN}
          npm publish --workspace lib --tag $TAG
